{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","className","classes","main","img","src","alt","main2","d33","messageData","HW1","style","backgroundColor","color","Affair","props","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","fontWeight","textDecoration","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","wrapper","value","onChange","errorMessage","button7","GreetingContainer","users","addUserCallback","setName","setError","length","e","target","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","currentTarget","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","text","setText","showAlert","checked","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5e612ea6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__2gOl_\",\"img\":\"Message_img__2hw3a\",\"main2\":\"Message_main2__2ahq2\",\"d33\":\"Message_d33__ANkhj\",\"name\":\"Message_name__Tzmp0\",\"message\":\"Message_message__8WR15\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__1uvQ8\",\"errorMessage\":\"Greeting_errorMessage__zEoF5\",\"wrapper\":\"Greeting_wrapper__3Dbfg\",\"button7\":\"Greeting_button7__1oaxt\",\"animated\":\"Greeting_animated__3P0wf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import classes from './Message.module.css';\nimport React from 'react'\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nconst Message: React.FC<MessageType> = ({\n    avatar,\n    name,\n    message,\n    time,\n}) => {\n    return (\n        <div className={classes.main}>\n            <div><img className={classes.img} src={avatar} alt='Not found' /></div>\n\n            <div className={`${classes.main2} ${classes.d33}`}>\n\n                <div className={classes.name}>{name}</div>\n\n                <div className={classes.message}>{message}</div>\n\n                <div className={classes.time}>{time}</div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message;\n","import React from 'react'\nimport Message from './Message'\nconst messageData = {\n    avatar: 'https://admin-salon.nethouse.ru/static/img/0000/0007/0436/70436824.9dfdgyefpu.W665.jpg',\n    name: 'Administrator',\n    message: 'Hello, how can I help you?',\n    time: '22:00',\n}\n\n\nfunction HW1() {\n    return (\n        <div style ={{backgroundColor: '#DDA0DD'}}>\n            <hr/>\n            <h3 style ={{color: \"#4B0082\"}}>homeworks 1</h3>\n\n            {/*should work (должно работать)*/}\n            \n            <Message \n                avatar={messageData.avatar} \n                name={messageData.name} \n                message={messageData.message} \n                time={messageData.time}\n            /> \n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react';\nimport { AffairType } from './HW2';\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) }\n\n    return (\n        <div>\n            {`${props.affair.name} [${props.affair.priority}]`}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair;\n","import React from 'react';\nimport Affair from './Affair';\nimport {AffairType} from './HW2';\n\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: any\n    deleteAffairCallback: any\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair \n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs;\n","import React, { useState } from 'react';\nimport Affairs from './Affairs';\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle';\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ \n    { _id: 1, name: 'React', priority: 'high' },\n    { _id: 2, name: 'anime', priority: 'low' },\n    { _id: 3, name: 'games', priority: 'low' },\n    { _id: 4, name: 'work', priority: 'high' },\n    { _id: 5, name: 'html & css', priority: 'middle' },\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { \n    if (filter === 'all') return affairs\n    else return affairs.filter(a => a.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> | [] => { \n    return affairs.filter(a => a._id !== _id);\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n    const [filter, setFilter] = useState<FilterType>('all');\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div style={{\n            backgroundColor: \"#FFB6C1\",\n            fontWeight: 800,\n            // color: \"#4B0082\",\n            textDecoration: \"none\"\n        }}>\n            <hr />\n            <h3 style ={{color: \"#4B0082\"}}>homeworks 2</h3>\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string;\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void;\n    addUser: () => void;\n    error: string;\n    totalUsers: number;\n};\n\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers }\n) => {\n    const inputClass = error ? s.error : \"\";\n    return (\n        <div className={s.wrapper}>\n            <input value={name} onChange={setNameCallback} className={inputClass} />\n            {error && <span className={s.errorMessage}>{error}</span>}\n            <button onClick={addUser} className={s.button7}>\n                Say hello\n            </button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n};\nexport default Greeting;","import React, { ChangeEvent, useState } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>;\n    addUserCallback: (name: string) => void;\n};\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n    users,\n    addUserCallback\n}) => {\n    // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.target.value);\n        setError(\"\");\n    };\n    const addUser = () => {\n        if (name.trim().length > 0) {\n            alert(`Hello ${name}!`);\n            addUserCallback(name);\n            setName(\"\");\n        } else {\n            setError(\"The string must contain the name\");\n            setName(\"\");\n        }\n    };\n    const totalUsers = users.length;\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers} />\n    );\n};\nexport default GreetingContainer;\n\n","import React, { useState } from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport { v1 } from \"uuid\";\n// types\nexport type UserType = {\n    _id: string;\n    name: string;\n};\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n    const addUserCallback = (name: string) => {\n        // need to fix any\n        setUsers([...users, { _id: v1(), name }]); // need to fix\n    };\n    return (\n        <div\n            style={{\n                backgroundColor: \"#E6E6FA\",\n                fontWeight: 800,\n                color: \"#4B0082\",\n                textDecoration: \"none\"\n            }}>\n            <hr />\n            <h3>homeworks 3</h3>\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr />\n        </div>\n    );\n}\nexport default HW3;\n\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n            && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n            && e.key === 'Enter' // и если нажата кнопка Enter\n            && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\n    const finalInputClassName = `${error} ? ${s.errorInput}  :  ${s.superInput}`;\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react';\nimport s from './App.module.css';\nimport HW1 from '../../../p2-homeworks/h1/HW1';\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}